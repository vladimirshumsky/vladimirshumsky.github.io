{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/codes/task/src/components/Input/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"../Input/input.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setError } from \"../../Redux/Store/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  _s();\n  let {\n    placeholder,\n    type,\n    focus,\n    value,\n    setSlice,\n    success\n  } = _ref;\n  const dispatch = useDispatch();\n  const errorState = useSelector(state => state.auth.error);\n  const errorStateReg = useSelector(state => state.auth.errorRegistration);\n  // const isValidEmail = (email) => {\n  //   return /\\S+@\\S+\\.\\S+/.test(email);\n  // };\n\n  // const onChangeInput = (e) => {\n  //   if (isValidEmail(e.target.value)) {\n  //     dispatch(setSlice(e.target.value));\n  //   } else {\n  //     dispatch(setError(true));\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    placeholder: placeholder,\n    onFocus: () => focus(),\n    value: value,\n    className: (errorState ? styles.error : success ? styles.success : styles.input) || errorStateReg ? styles.error : styles.input,\n    onChange: e => dispatch(setSlice(e.target.value))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"/t+ETGC/u2QZYa5xUZsKgZuLDnU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","styles","useDispatch","useSelector","setError","Input","placeholder","type","focus","value","setSlice","success","dispatch","errorState","state","auth","error","errorStateReg","errorRegistration","input","e","target"],"sources":["/Users/user/Documents/codes/task/src/components/Input/index.jsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"../Input/input.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setError } from \"../../Redux/Store/authSlice\";\n\nconst Input = ({ placeholder, type, focus, value, setSlice, success }) => {\n  const dispatch = useDispatch();\n  const errorState = useSelector((state) => state.auth.error);\n  const errorStateReg = useSelector((state) => state.auth.errorRegistration);\n  // const isValidEmail = (email) => {\n  //   return /\\S+@\\S+\\.\\S+/.test(email);\n  // };\n\n  // const onChangeInput = (e) => {\n  //   if (isValidEmail(e.target.value)) {\n  //     dispatch(setSlice(e.target.value));\n  //   } else {\n  //     dispatch(setError(true));\n  //   }\n  // };\n\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      onFocus={() => focus()}\n      value={value}\n      className={\n        (errorState ? styles.error : success ? styles.success : styles.input) ||\n        errorStateReg\n          ? styles.error\n          : styles.input\n      }\n      onChange={(e) => dispatch(setSlice(e.target.value))}\n    ></input>\n  );\n};\nexport default Input;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,6BAA6B;AAAC;AAEvD,MAAMC,KAAK,GAAG,QAA4D;EAAA;EAAA,IAA3D;IAAEC,WAAW;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EACnE,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EAC3D,MAAMC,aAAa,GAAGd,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACG,iBAAiB,CAAC;EAC1E;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IACE,IAAI,EAAEX,IAAK;IACX,WAAW,EAAED,WAAY;IACzB,OAAO,EAAE,MAAME,KAAK,EAAG;IACvB,KAAK,EAAEC,KAAM;IACb,SAAS,EACP,CAACI,UAAU,GAAGZ,MAAM,CAACe,KAAK,GAAGL,OAAO,GAAGV,MAAM,CAACU,OAAO,GAAGV,MAAM,CAACkB,KAAK,KACpEF,aAAa,GACThB,MAAM,CAACe,KAAK,GACZf,MAAM,CAACkB,KACZ;IACD,QAAQ,EAAGC,CAAC,IAAKR,QAAQ,CAACF,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACZ,KAAK,CAAC;EAAE;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEb,CAAC;AAAC,GA/BIJ,KAAK;EAAA,QACQH,WAAW,EACTC,WAAW,EACRA,WAAW;AAAA;AAAA,KAH7BE,KAAK;AAgCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}