{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/codes/task/src/components/pages/Login/components/LoginForm/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"./LoginForm.module.scss\";\nimport LoginInputName from \"@/components/pages/Login/components/LoginInputEmail\";\nimport LoginInputEmail from \"@/components/pages/Login/components/LoginInputPassword\";\nimport InputsWrapper from \"@/components/pages/common/InputsWrapper/InputsWrapper\";\nimport ActionButton from \"@/components/pages/common/ActionButton/ActionButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setError } from \"@/redux/store/login-page/login-pahe-slice\";\nimport { setEmail, setPassword, setSuccess } from \"@/redux/store/login-page/login-pahe-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const mailState = useSelector(state => state.login.emailSignIn);\n  const passwordState = useSelector(state => state.login.passwordSignIn);\n  const onSubmit = e => {\n    e.preventDefault();\n    if (mailState === \"example@example.com\" && passwordState === \"password2021\") {\n      setSuccess(true);\n      setTimeout(() => setSuccess(false), 3000);\n      setTimeout(() => dispatch(setEmail(\"\")), 3000);\n      setTimeout(() => dispatch(setPassword(\"\")), 3000);\n    } else {\n      setError(true);\n      // dispatch(setEmail(\"\"));\n      // dispatch(setPassword(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.root,\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(LoginInputEmail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginInputName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"db29BJGBRTURFndHfTkKZUpJE+s=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","styles","LoginInputName","LoginInputEmail","InputsWrapper","ActionButton","useDispatch","useSelector","setError","setEmail","setPassword","setSuccess","LoginForm","dispatch","mailState","state","login","emailSignIn","passwordState","passwordSignIn","onSubmit","e","preventDefault","setTimeout","root"],"sources":["/Users/user/Documents/codes/task/src/components/pages/Login/components/LoginForm/LoginForm.jsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./LoginForm.module.scss\";\nimport LoginInputName from \"@/components/pages/Login/components/LoginInputEmail\";\nimport LoginInputEmail from \"@/components/pages/Login/components/LoginInputPassword\";\n\nimport InputsWrapper from \"@/components/pages/common/InputsWrapper/InputsWrapper\";\nimport ActionButton from \"@/components/pages/common/ActionButton/ActionButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setError } from \"@/redux/store/login-page/login-pahe-slice\";\nimport {\n  setEmail,\n  setPassword,\n  setSuccess,\n} from \"@/redux/store/login-page/login-pahe-slice\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const mailState = useSelector((state) => state.login.emailSignIn);\n  const passwordState = useSelector((state) => state.login.passwordSignIn);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (\n      mailState === \"example@example.com\" &&\n      passwordState === \"password2021\"\n    ) {\n      setSuccess(true);\n      setTimeout(() => setSuccess(false), 3000);\n      setTimeout(() => dispatch(setEmail(\"\")), 3000);\n      setTimeout(() => dispatch(setPassword(\"\")), 3000);\n    } else {\n      setError(true);\n      // dispatch(setEmail(\"\"));\n      // dispatch(setPassword(\"\"));\n    }\n  };\n\n  return (\n    <form className={styles.root} onSubmit={onSubmit}>\n      <InputsWrapper>\n        <LoginInputEmail />\n        <LoginInputName />\n      </InputsWrapper>\n\n      <ActionButton>Войти в аккаунт</ActionButton>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,cAAc,MAAM,qDAAqD;AAChF,OAAOC,eAAe,MAAM,wDAAwD;AAEpF,OAAOC,aAAa,MAAM,uDAAuD;AACjF,OAAOC,YAAY,MAAM,qDAAqD;AAC9E,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,2CAA2C;AACpE,SACEC,QAAQ,EACRC,WAAW,EACXC,UAAU,QACL,2CAA2C;AAAC;AAEnD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC;EACjE,MAAMC,aAAa,GAAGX,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACG,cAAc,CAAC;EAExE,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IACER,SAAS,KAAK,qBAAqB,IACnCI,aAAa,KAAK,cAAc,EAChC;MACAP,UAAU,CAAC,IAAI,CAAC;MAChBY,UAAU,CAAC,MAAMZ,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MACzCY,UAAU,CAAC,MAAMV,QAAQ,CAACJ,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MAC9Cc,UAAU,CAAC,MAAMV,QAAQ,CAACH,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACnD,CAAC,MAAM;MACLF,QAAQ,CAAC,IAAI,CAAC;MACd;MACA;IACF;EACF,CAAC;;EAED,oBACE;IAAM,SAAS,EAAEP,MAAM,CAACuB,IAAK;IAAC,QAAQ,EAAEJ,QAAS;IAAA,wBAC/C,QAAC,aAAa;MAAA,wBACZ,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eACnB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eAEhB,QAAC,YAAY;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEX,CAAC;AAAC,GAhCIR,SAAS;EAAA,QACIN,WAAW,EACVC,WAAW,EACPA,WAAW;AAAA;AAAA,KAH7BK,SAAS;AAkCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}